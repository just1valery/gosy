
Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ОсновныеНачисления
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.Регистратор = Ссылка;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоДня(ТекСтрокаНачисления.ДатаНачала);
		Движение.БазовыйПериодКонец = КонецДня(ТекСтрокаНачисления.ДатаОкончания);
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		Движение.Результат = 0;
		Движение.ИсходныеДанные = ТекСтрокаНачисления.Величина;
		Если ТекСтрокаНачисления.ОтработаноЧасов > 8 Тогда
			Движение.Часы = 8;
		Иначе 
			Движение.Часы = ТекСтрокаНачисления.ОтработаноЧасов;
		КонецЕсли;
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			Движение.Результат = 2000;
		КонецЕсли;
	КонецЦикла;
	
	// регистр Удержания
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.Регистратор = Ссылка;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоДня(ТекСтрокаУдержания.ДатаНачала);
		Движение.БазовыйПериодКонец = КонецДня(ТекСтрокаУдержания.ДатаОкончания);
		Движение.Сотрудник = ТекСтрокаУдержания.Сотрудник;
		Движение.ИсходныеДанные = ТекСтрокаУдержания.Величина;
		Движение.Результат = 0;
		
	КонецЦикла;
	Движения.ОсновныеНачисления.Записать();
	Движения.Удержания.Записать();
	
	РассчитатьНачисления(Движения.ОсновныеНачисления, ПланыВидовРасчета.ОсновныеНачисления.Тариф);
	РассчитатьНачисления(Движения.ОсновныеНачисления, ПланыВидовРасчета.ОсновныеНачисления.ЕдиновременноеПособие);
	РассчитатьНачисления(Движения.ОсновныеНачисления, ПланыВидовРасчета.ОсновныеНачисления.РитуальноеПособие);
	РассчитатьНачисления(Движения.ОсновныеНачисления, ПланыВидовРасчета.ОсновныеНачисления.Больничный);
	
	РассчитатьУдержания(Движения.Удержания, ПланыВидовРасчета.Удержания.УдержаниеПоСсуде);
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура РассчитатьНачисления(НаборДвижений, ВидРасчета)
	Если ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Тариф Тогда
		Для каждого ТекДвижение Из НаборДвижений Цикл
			Если ТекДвижение.ВидРасчета = ВидРасчета Тогда
				ФактОтработано = ТекДвижение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ФактическийПериодДействия);
				ПланОтработано = ТекДвижение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ПериодДействия);
				ТекДвижение.Результат = ТекДвижение.ИсходныеДанные * ФактОтработано.Получить(0).Значение/8*ТекДвижение.Часы; 
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ЕдиновременноеПособие Тогда
		Ресурсы = Новый Массив(1);
		Ресурсы.Установить(0,"ОсновныеНачисления.Результат");
		Измерения = Новый Структура("Сотрудник", "ОсновныеНачисления.Сотрудник");
		Для каждого ТекДвижение из НаборДвижений Цикл
			Если ТекДвижение.ВидРасчета = ВидРасчета Тогда
				ТекДвижение.Результат = ТекДвижение.ИсходныеДанные;
			КонецЕсли;
		КонецЦикла;	
	ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.РитуальноеПособие Тогда
		Ресурсы = Новый Массив(1);
		Ресурсы.Установить(0,"ОсновныеНачисления.Результат");
		Измерения = Новый Структура("Сотрудник", "ОсновныеНачисления.Сотрудник");
		Для каждого ТекДвижение из НаборДвижений Цикл
			Если ТекДвижение.ВидРасчета = ВидРасчета Тогда
				БазаРасчета = ТекДвижение.ПолучитьБазу(Ресурсы, Измерения);
				ТекДвижение.Результат = ТекДвижение.ИсходныеДанные + БазаРасчета.Получить(0).Результат;
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;
	Если НаборДвижений.Модифицированность() Тогда
		НаборДвижений.Записать(, Истина);
	КонецЕсли;
КонецПроцедуры 

Процедура РассчитатьУдержания(НаборДвижений, ВидРасчета)
	Если ВидРасчета = ПланыВидовРасчета.Удержания.УдержаниеПоСсуде Тогда
		Ресурсы = Новый Массив(1);
		Ресурсы.Установить(0, "ОсновныеНачисления.Результат");
		Измерения = Новый Структура("Сотрудник", "ОсновныеНачисления.Сотрудник");
		Для Каждого ТекДвижение Из НаборДвижений Цикл 
			Если ТекДвижение.ВидРасчета = ВидРасчета Тогда
				БазаРасчета = ТекДвижение.ПолучитьБазу(Ресурсы, Измерения);
				ТекДвижение.Результат = ТекДвижение.ИсходныеДанные * БазаРасчета.Получить(0).Результат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НаборДвижений.Модифицированность() Тогда
		НаборДвижений.Записать(, Истина);	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НачисленияСотрудникПриИзменении(Элемент)
	ТК = Элементы.Начисления.ТекущиеДанные;
	ТК.Величина = ЗаполнитьСтроку(ТК.Сотрудник, ТК.ВидРасчета, ТК.ДатаНачала, ТК.ДатаОкончания, Объект.ПериодРегистрации);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияСотрудникПриИзменении(Элемент)
	ТК = Элементы.Удержания.ТекущиеДанные;
	ТК.Величина = ЗаполнитьСтроку(ТК.Сотрудник, ТК.ВидРасчета, ТК.ДатаНачала, ТК.ДатаОкончания, Объект.ПериодРегистрации);
КонецПроцедуры 

&НаСервере
Функция ЗаполнитьСтроку (ТекСотр, ТекВидРасчета, ДатаНачала, ДатаОкончания, ПериодРегистрации)
	Если ДатаНачала = Дата(1, 1, 1) Тогда
		ДатаНачала = НачалоМесяца(ПериодРегистрации);
	КонецЕсли;
	Если ДатаОкончания = Дата(1, 1, 1) Тогда
		ДатаОкончания = КонецМесяца(ПериодРегистрации);
	КонецЕсли;
	
	Если ТекВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Тариф Тогда
		Величина = ПолучитьПоТарифу(ТекСотр);
	ИначеЕсли ТекВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ЕдиновременноеПособие Тогда
		Величина = ПолучитьЕдинПособие();
	ИначеЕсли ТекВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.РитуальноеПособие Тогда
		Величина = ПолучитьРитПособие(ТекСотр);
	ИначеЕсли ТекВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
		Величина = 2000;
	ИначеЕсли ТекВидРасчета = ПланыВидовРасчета.Удержания.УдержаниеПоСсуде Тогда
		Величина = ПолучитьУдержПоСсуде();
	КонецЕсли;
	Возврат Величина;
КонецФункции 

Функция ПолучитьПоТарифу(Сотрудник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛицаЗарплата.Тариф КАК Тариф
	               |ИЗ
	               |	Справочник.ФизическиеЛицаЗарплата КАК ФизическиеЛицаЗарплата
	               |ГДЕ
	               |	ФизическиеЛицаЗарплата.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий()Тогда 
		Если Выборка.Тариф <> null Тогда
			Тариф = Выборка.Тариф;
		Иначе
			Тариф = 0;	
		КонецЕсли;                  
	КонецЕсли;
	
	Возврат Тариф; 
КонецФункции
